/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and load the template in the editor.
 */
package com.pekinsoft.cms.view.children;

import com.pekinsoft.cms.ctrl.Departments;
import com.pekinsoft.cms.model.Department;
import com.pekinsoft.cms.view.MainFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sean Carrick &lt;sean at pekinsoft dot com&gt;
 */
public class DepartmentBrowser extends javax.swing.JInternalFrame {

    private Departments records;
    private int lastSelectedRow;
    
    /**
     * Creates new form DepartmentBrowser
     */
    public DepartmentBrowser() {
        initComponents();
        
        records = new Departments("departments");
        
        departmentsTable.setRowSelectionAllowed(true);
        departmentsTable.setColumnSelectionAllowed(false);
        departmentsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        loadTable();
        
        counterLabel.setText("Department 1 of " 
                + departmentsTable.getModel().getRowCount());
    }
    
    private void loadTable() {
        DefaultTableModel model = (DefaultTableModel)departmentsTable.getModel();
        Department d = (Department)records.first();
        
        for ( int x = 0; x < records.getRecordCount(); x++ ) {
            String[] s = {String.valueOf(d.getId()), d.getName()};
            
            model.addRow(s);
            
            if ( records.hasNext() ) {
                d = (Department)records.next();
            }
        }
        
        departmentsTable.setModel(model);
        departmentsTable.setRowSelectionInterval(0, 0);
        idField.setText(departmentsTable.getValueAt(0, 0).toString());
        departmentField.setText(departmentsTable.getValueAt(0, 1).toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        departmentsTable = new javax.swing.JTable();
        departmentsToolbar = new javax.swing.JToolBar();
        closeButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        firstButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();
        counterLabel = new javax.swing.JLabel();
        nextButton = new javax.swing.JButton();
        lastButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        newButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        deleteButton = new javax.swing.JButton();
        detailsPanel = new javax.swing.JPanel();
        idLabel = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        departmentLabel = new javax.swing.JLabel();
        departmentField = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("Departments");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pekinsoft/cms/res/Component.png"))); // NOI18N

        departmentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Department"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        departmentsTable.setColumnSelectionAllowed(true);
        departmentsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                departmentsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(departmentsTable);
        departmentsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        departmentsToolbar.setFloatable(false);
        departmentsToolbar.setRollover(true);

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pekinsoft/cms/res/Cancel.png"))); // NOI18N
        closeButton.setToolTipText("Close the Department Browser");
        closeButton.setFocusable(false);
        closeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        closeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        closeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeButtonMouseExited(evt);
            }
        });
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        departmentsToolbar.add(closeButton);
        departmentsToolbar.add(jSeparator1);

        firstButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pekinsoft/cms/res/First record.png"))); // NOI18N
        firstButton.setToolTipText("Move to the first department record");
        firstButton.setFocusable(false);
        firstButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        firstButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        firstButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                firstButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                firstButtonMouseExited(evt);
            }
        });
        firstButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstButtonActionPerformed(evt);
            }
        });
        departmentsToolbar.add(firstButton);

        previousButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pekinsoft/cms/res/Go back.png"))); // NOI18N
        previousButton.setToolTipText("Move to the previous department record");
        previousButton.setFocusable(false);
        previousButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        previousButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        previousButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                previousButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                previousButtonMouseExited(evt);
            }
        });
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });
        departmentsToolbar.add(previousButton);

        counterLabel.setText("Department XX of XX");
        counterLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                counterLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                counterLabelMouseExited(evt);
            }
        });
        departmentsToolbar.add(counterLabel);

        nextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pekinsoft/cms/res/Go forward.png"))); // NOI18N
        nextButton.setToolTipText("Move to the next department record");
        nextButton.setFocusable(false);
        nextButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nextButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nextButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nextButtonMouseExited(evt);
            }
        });
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });
        departmentsToolbar.add(nextButton);

        lastButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pekinsoft/cms/res/Last recor.png"))); // NOI18N
        lastButton.setToolTipText("Move to the last department record");
        lastButton.setFocusable(false);
        lastButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lastButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lastButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lastButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lastButtonMouseExited(evt);
            }
        });
        lastButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastButtonActionPerformed(evt);
            }
        });
        departmentsToolbar.add(lastButton);
        departmentsToolbar.add(jSeparator2);

        newButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pekinsoft/cms/res/New.png"))); // NOI18N
        newButton.setToolTipText("Add a new record");
        newButton.setFocusable(false);
        newButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newButtonMouseExited(evt);
            }
        });
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });
        departmentsToolbar.add(newButton);

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pekinsoft/cms/res/Save.png"))); // NOI18N
        saveButton.setToolTipText("Save changes to the record");
        saveButton.setFocusable(false);
        saveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveButtonMouseExited(evt);
            }
        });
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        departmentsToolbar.add(saveButton);

        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pekinsoft/cms/res/No-entry.png"))); // NOI18N
        cancelButton.setToolTipText("Cancel changes to record");
        cancelButton.setFocusable(false);
        cancelButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelButtonMouseExited(evt);
            }
        });
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        departmentsToolbar.add(cancelButton);
        departmentsToolbar.add(jSeparator3);

        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pekinsoft/cms/res/Delete.png"))); // NOI18N
        deleteButton.setToolTipText("Delete the current record");
        deleteButton.setFocusable(false);
        deleteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteButtonMouseExited(evt);
            }
        });
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        departmentsToolbar.add(deleteButton);

        detailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Department Details"));

        idLabel.setDisplayedMnemonic('I');
        idLabel.setLabelFor(idField);
        idLabel.setText("ID:");

        idField.setEditable(false);
        idField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                idFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                idFieldFocusLost(evt);
            }
        });

        departmentLabel.setDisplayedMnemonic('D');
        departmentLabel.setLabelFor(departmentField);
        departmentLabel.setText("Department:");

        departmentField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                departmentFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                departmentFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout detailsPanelLayout = new javax.swing.GroupLayout(detailsPanel);
        detailsPanel.setLayout(detailsPanelLayout);
        detailsPanelLayout.setHorizontalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addComponent(idLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(departmentLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(departmentField)
                .addContainerGap())
        );
        detailsPanelLayout.setVerticalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(idLabel)
                .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(departmentLabel)
                .addComponent(departmentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
            .addComponent(departmentsToolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(detailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(departmentsToolbar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseEntered
        MainFrame.setTip("<html>Click to close the <em>Department Browser</em>.");
    }//GEN-LAST:event_closeButtonMouseEntered

    private void closeButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseExited
        MainFrame.resetTip();
    }//GEN-LAST:event_closeButtonMouseExited

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // Reset the tip to the default text.
        MainFrame.setDefaultTip();
        
        // Save all records to the files.
        boolean success = records.save();
        if ( !success ) 
            JOptionPane.showInternalMessageDialog(this, "Data did not get saved!");

        // Close the window
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void firstButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_firstButtonMouseEntered
        MainFrame.setTip("<html>Click to move to the first department record.");
    }//GEN-LAST:event_firstButtonMouseEntered

    private void firstButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_firstButtonMouseExited
        MainFrame.resetTip();
    }//GEN-LAST:event_firstButtonMouseExited

    private void previousButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousButtonMouseEntered
        MainFrame.setTip("<html>Click to move to the previous department record.");
    }//GEN-LAST:event_previousButtonMouseEntered

    private void previousButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousButtonMouseExited
        MainFrame.resetTip();
    }//GEN-LAST:event_previousButtonMouseExited

    private void counterLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_counterLabelMouseEntered
        MainFrame.setTip("<html>Shows your <em>current</em> position in the "
            + "departments table.");
    }//GEN-LAST:event_counterLabelMouseEntered

    private void counterLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_counterLabelMouseExited
        MainFrame.resetTip();
    }//GEN-LAST:event_counterLabelMouseExited

    private void nextButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonMouseEntered
        MainFrame.setTip("<html>Click to move to the next department record.");
    }//GEN-LAST:event_nextButtonMouseEntered

    private void nextButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonMouseExited
        MainFrame.resetTip();
    }//GEN-LAST:event_nextButtonMouseExited

    private void lastButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lastButtonMouseEntered
        MainFrame.setTip("<html>Click to move to the last department record.");
    }//GEN-LAST:event_lastButtonMouseEntered

    private void lastButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lastButtonMouseExited
        MainFrame.resetTip();
    }//GEN-LAST:event_lastButtonMouseExited

    private void newButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newButtonMouseEntered
        MainFrame.setTip("<html>Click to add a new department record.");
    }//GEN-LAST:event_newButtonMouseEntered

    private void newButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newButtonMouseExited
        MainFrame.resetTip();
    }//GEN-LAST:event_newButtonMouseExited

    private void saveButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseEntered
        MainFrame.setTip("<html>Click to save changes to the department record.");
    }//GEN-LAST:event_saveButtonMouseEntered

    private void saveButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseExited
        MainFrame.resetTip();
    }//GEN-LAST:event_saveButtonMouseExited

    private void cancelButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseEntered
        MainFrame.setTip("<html>Click to cancel changes to the department record.");
    }//GEN-LAST:event_cancelButtonMouseEntered

    private void cancelButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseExited
        MainFrame.resetTip();
    }//GEN-LAST:event_cancelButtonMouseExited

    private void deleteButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseEntered
        MainFrame.setTip("<html>Click to delete the current record. <strong>This"
            + " action cannot be undone, so <em>be careful</em>!</strong>");
    }//GEN-LAST:event_deleteButtonMouseEntered

    private void deleteButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseExited
        MainFrame.resetTip();
    }//GEN-LAST:event_deleteButtonMouseExited

    private void idFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idFieldFocusGained
        idField.selectAll();
        MainFrame.setTip("<html>The unique ID number for the department. This "
                + "field is <strong><em>not editable</em></strong>, as this "
                + "number is <em>automatically generated</em>.");
    }//GEN-LAST:event_idFieldFocusGained

    private void idFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idFieldFocusLost
        idField.select(0, 0);
        MainFrame.resetTip();
    }//GEN-LAST:event_idFieldFocusLost

    private void departmentFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_departmentFieldFocusGained
        departmentField.selectAll();
        MainFrame.setTip("<html>The name of the department. This is a <strong>"
                + "<em>required</em></strong> field.");
    }//GEN-LAST:event_departmentFieldFocusGained

    private void departmentFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_departmentFieldFocusLost
        departmentField.select(0, 0);
        MainFrame.resetTip();
    }//GEN-LAST:event_departmentFieldFocusLost

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        Department d = new Department();
        d.setName(departmentField.getText());
        idField.setText(String.valueOf(d.getId()));
        
        if ( departmentsTable.getSelectedRow() == -1 ) {
            // Add the record to the table.
            records.addNew(d);

            // Add the record to the table.
            String[] row = {String.valueOf(d.getId()), d.getName()};
            DefaultTableModel model = (DefaultTableModel)departmentsTable.getModel();
            model.addRow(row);
            departmentsTable.setModel(model);
            departmentsTable.setRowSelectionInterval(
                    departmentsTable.getModel().getRowCount() - 1, 
                    departmentsTable.getModel().getRowCount() - 1);
            
            counterLabel.setText("Department " 
                    + departmentsTable.getModel().getRowCount() + " of " 
                    + departmentsTable.getModel().getRowCount());
        } else {
            departmentsTable.setValueAt(departmentField.getText(), 
                    departmentsTable.getSelectedRow(), 1);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void departmentsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_departmentsTableMouseClicked
        int id = 0;
        int name = 1;
        int row = departmentsTable.getSelectedRow();
        idField.setText(departmentsTable.getModel().getValueAt(row, id).toString());
        departmentField.setText(departmentsTable.getModel().getValueAt(row, name).toString());
        row++;
        counterLabel.setText("Department " + row + " of " 
                + departmentsTable.getModel().getRowCount());
    }//GEN-LAST:event_departmentsTableMouseClicked

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        idField.setText(String.valueOf(System.currentTimeMillis()));
        departmentField.setText("");
        lastSelectedRow = departmentsTable.getSelectedRow();
        departmentsTable.clearSelection();
        departmentField.requestFocusInWindow();
    }//GEN-LAST:event_newButtonActionPerformed

    private void firstButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstButtonActionPerformed
        departmentsTable.setRowSelectionInterval(0, 0);
        departmentsTableMouseClicked(null);
    }//GEN-LAST:event_firstButtonActionPerformed

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        if ( departmentsTable.getSelectedRow() > 0 )
            departmentsTable.setRowSelectionInterval(departmentsTable.getSelectedRow() - 1, departmentsTable.getSelectedRow() - 1);
        departmentsTableMouseClicked(null);
    }//GEN-LAST:event_previousButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        if ( departmentsTable.getSelectedRow() < (departmentsTable.getModel().getRowCount() - 1) )
            departmentsTable.setRowSelectionInterval(departmentsTable.getSelectedRow() + 1, departmentsTable.getSelectedRow() + 1);
        departmentsTableMouseClicked(null);
    }//GEN-LAST:event_nextButtonActionPerformed

    private void lastButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastButtonActionPerformed
        departmentsTable.setRowSelectionInterval(departmentsTable.getModel().getRowCount() - 1, departmentsTable.getModel().getRowCount() - 1);
        departmentsTableMouseClicked(null);
    }//GEN-LAST:event_lastButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        departmentsTable.setRowSelectionInterval(lastSelectedRow, lastSelectedRow);
        departmentsTableMouseClicked(null);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // First, we need to notify the user that this action cannot be undone,
        //+ so they need to make sure that they want to delete the record.
        int response = JOptionPane.showInternalConfirmDialog(this, "Action "
                + "cannot be undone.\n\nDo you wish to delete the record?");
        
        if ( response == JOptionPane.YES_OPTION ) {
            Department d = new Department();
            int row = departmentsTable.getSelectedRow();
            int rowCount = departmentsTable.getModel().getRowCount();
            d.setId(Long.parseLong(departmentsTable.getValueAt(row, 0).toString()));
            d.setName(departmentsTable.getValueAt(row, 1).toString());
            records.delete(d);
            DefaultTableModel model = (DefaultTableModel)departmentsTable.getModel();
            model.removeRow(row);
            departmentsTable.setModel(model);
            
            if ( row < (rowCount - 1) ) {
                row++;
            } else if ( row > 0 ) {
                row--;
            } else {
                row = -1;
            }
            
            departmentsTable.setRowSelectionInterval(row, row);
            departmentsTableMouseClicked(null);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel counterLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField departmentField;
    private javax.swing.JLabel departmentLabel;
    private javax.swing.JTable departmentsTable;
    private javax.swing.JToolBar departmentsToolbar;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JButton firstButton;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JButton lastButton;
    private javax.swing.JButton newButton;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton previousButton;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
